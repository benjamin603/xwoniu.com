
[{"content":"写年度总结不是一件容易的事情，从年前写到了现在！\n前言 #\r从上学接触互联网到现在，曾经在QQ空间、微博、51、简书、Twitter等平台写作过。在2021年1月8日，网络上出现了很严重的数据泄露事件，当时就想自己搭建一块网络自留地，来记录一些东西。\n2024 总结 #\r工作 #\r这个年过的心情很是复杂，很大原因是因为工作的原因。已经通过网络渠道把单位欠薪事情反应了，因为过年放假的原因，还需要耐心的等待。\n骑行 #\r今年确实比往年里程少了很多，主要是工作原因，并不能像往年那样每个周末出去摩旅了。\n大概回想了下，今年中短途去过的地方有：\n秦岭鸡窝子 蓝田县汤峪 环山公路 临潼骊山 咸阳泾阳 鄠邑区 铜川市 过完年天气暖和后，尽量多抽时间骑车出去转一转\n事故 #\r11月凌晨去机场接人，距机场一公里处有一段特别窄的道路，没有灯光，路两侧全是违停车辆（大多是网约车司机），右前后视镜将路边停放的车房剐蹭了一点点，当时并不知道，等接完人就回家睡觉了。第二天在单位接到机场交警电话才知道这件事情。\n请假驱车80多公里去处理，JC 叔叔查看了当时的监控视频，判定我应该是不知情的情况下发生了轻微剐蹭，对方是一辆刚买不到一个月的新能源车，本来打算给几百块钱了事，结果对方因为是新车只想去四儿子店，后来走了保险，2000的交强险保额足够用了。\n因为下雨的原因，对方车俩也比较脏，所以也看不出来到底划痕是多少。\n小侄女 #\r2024.10.20日，她才一岁半，去看小侄女的时候想给带个礼物，后来问她爸爸喜欢什么东西？告诉我喜欢毛绒玩具，尤其是小狗。就在商场一个礼品店买了一只\n结果到了才知道她有一只一摸一样的，只是颜色不一样。后来才知道是她爸妈带她商场的时候，她一眼就看中了这个。\n真是巧了，我俩看上同一款！\n这是过年期间叫我去她家吃饭时拍的视频，不是陕西人可能听不懂！\n2025 计划 #\r工作 #\r肯定时先把去年欠薪要回来，这家单位肯定也不想待了，重新换一份工作。\n爱好 #\r今年打算多出去走一走，不管是远近，看时间安排吧。省外最想去的就是自驾甘南的洛克之路，云南、青岛、重庆、长沙这几个城市。\n其实自己平时除了摩旅，是一个很宅的人，休息时间没事不会出门，最大的乐趣的就是看电视、电影以及玩电脑了。\n今年正确坚持一项锻炼的项目，比如：跑步，骑行、健身房等！\n博客 #\r多写一些生活记录相关的东西！\n多写一些生活记录相关的东西！\n多写一些生活记录相关的东西！\n","date":"2025-02-02","externalUrl":null,"permalink":"/posts/daily/summary-of-2024/","section":"文章","summary":"写年度总结不是一件容易的事情，从年前写到了现在！","title":"2024年度总结","type":"posts"},{"content":"","date":"2025-02-02","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2025-02-02","externalUrl":null,"permalink":"/categories/daily/","section":"Categories","summary":"","title":"Daily","type":"categories"},{"content":"","date":"2025-02-02","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"\r你好👋 这里是 Benjamin 的博客 #\r\u0026ldquo;The limits of my language mean the limits of my world.\u0026rdquo;\r","date":"2025-02-02","externalUrl":null,"permalink":"/","section":"Welcome to Blowfish! 🎉","summary":"\u003ch1 class=\"relative group\"\u003e你好👋 这里是 Benjamin 的博客 \r\n    \u003cdiv id=\"%E4%BD%A0%E5%A5%BD-%E8%BF%99%E9%87%8C%E6%98%AF-benjamin-%E7%9A%84%E5%8D%9A%E5%AE%A2\" class=\"anchor\"\u003e\u003c/div\u003e\r\n    \r\n    \u003cspan\r\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\r\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\r\n            style=\"text-decoration-line: none !important;\" href=\"#%E4%BD%A0%E5%A5%BD-%E8%BF%99%E9%87%8C%E6%98%AF-benjamin-%E7%9A%84%E5%8D%9A%E5%AE%A2\" aria-label=\"锚点\"\u003e#\u003c/a\u003e\r\n    \u003c/span\u003e        \r\n    \r\n\u003c/h1\u003e\r\n\u003cdiv class=\"lead text-neutral-500 dark:text-neutral-400 !mb-9 text-xl\"\u003e\r\n  \u0026ldquo;The limits of my language mean the limits of my world.\u0026rdquo;\r\n\u003c/div\u003e","title":"Welcome to Blowfish! 🎉","type":"page"},{"content":"","date":"2025-02-02","externalUrl":null,"permalink":"/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/","section":"Tags","summary":"","title":"年度总结","type":"tags"},{"content":"","date":"2025-02-02","externalUrl":null,"permalink":"/posts/","section":"文章","summary":"","title":"文章","type":"sample"},{"content":"","date":"2025-01-21","externalUrl":null,"permalink":"/categories/code/","section":"Categories","summary":"","title":"Code","type":"categories"},{"content":"","date":"2025-01-21","externalUrl":null,"permalink":"/tags/gemini/","section":"Tags","summary":"","title":"Gemini","type":"tags"},{"content":"谷歌 Gemini 是所有一线顶级大模型当中唯一一个 API 可以免费白嫖的。本期视频，我们借助互联网大善人 Cloudflare 来中转一下 Gemini API，这样就得到一个国内免费爽用的顶级大模型。有了 API 以后，我们可以进行 AI 编程，可以聊天，可以音视频通话，做各种各样好玩的事情。\n获取 Cloudflare API #\r登录 Cloudflare ，左侧菜单选择 Workers 和 Pages，右侧我们可以看到 **账户 ID **； 左侧菜单选择 管理账户 - 账户 API 令牌，点击 创建令牌 （账户资源选择所有账户，选择包含所有区域） Chat API #\rGemini 转OpenAI格式： https://github.com/PublicAffairs/openai-gemini\n它的作用是把Gemini的API转换成OpenAI的API格式。我们可以看到，这里提供了一个部署到Cloudflare worker上面的方式。\n部署到Cloudflare worker以后，它事实上达成了两个效果：\n把API中转到了国内 把Gemini的API转换成更为通用的openai的格式 部署 #\r点击 Deploy with Worker 这个按钮；\n填写 Account ID 以及 API Token 后点击 Connect Account 来连接账户\n点击 Fork repository\n然后我们需要开启fork出来项目的 Github action 功能\n后我们回到刚才的页面，点击 workflow enabled，最后点击 deploy。等待 worker 部署完成。\n部署完成后我们绑定域名以便后续使用\nGemini API 申请 #\r首先我们需要一个科学上网的环境。\n打开：https://aistudio.google.com/ 并登录 Google 账号；\n点击左上角 Get API key\n然后随便填上一个项目，点击创建，这样我们就拿到了API密钥。\nAPI 实战 #\r接下来我们测试下\nChatbox #\rChatBox：https://github.com/Bin-Huang/chatbox\n下载安装好后，点击设置 ，模型选择 OPENAI api\nAPI密钥 我们还是填写谷歌的 Gemini API Key\nAPI 域名 填写我们刚才绑定自己的域名地址。\n然后我们在下面选择自定义模型，然后填一个模型的名字，这里我填 gemini-2.0-flash-exp，最后点击保存\nCursor #\rcursor 应该是目前最多人使用的AI编码工具\n设置中文 #\r跟 VS code 一样，我们在使用快捷键 Ctrl + Shift + X 在左侧应用商店搜索 chinese 安装即可！\n","date":"2025-01-21","externalUrl":null,"permalink":"/posts/code/free-use-aistudio/","section":"文章","summary":"谷歌 Gemini 是所有一线顶级大模型当中唯一一个 API 可以免费白嫖的。本期视频，我们借助互联网大善人 Cloudflare 来中转一下 Gemini API，这样就得到一个国内免费爽用的顶级大模型。有了 API 以后，我们可以进行 AI 编程，可以聊天，可以音视频通话，做各种各样好玩的事情。","title":"白嫖  Gemini","type":"posts"},{"content":"","date":"2025-01-16","externalUrl":null,"permalink":"/tags/aliyun/","section":"Tags","summary":"","title":"Aliyun","type":"tags"},{"content":"昨天晚上打算部署一个新的服务时，阿里云 ECS 突然不能访问了，SSH 也无法连接，VNC 也无法连接。今天上午联系客服才知道内存拉爆了！\n这台 ECS 安装了 1Pane 面板，其他服务都是通过 Docker 安装的，所以关闭了 Docker 后，重启服务器，解决了！\n登录 1Panel 后关闭了一些服务，看了下内存使用情况：\n总结 ：ECS 这种轻量服务器不要同时安装数据库，最好再备一台服务器，专门用来当数据库\n","date":"2025-01-16","externalUrl":null,"permalink":"/posts/code/win11-apps/","section":"文章","summary":"昨天晚上打算部署一个新的服务时，阿里云 ECS 突然不能访问了，SSH 也无法连接，VNC 也无法连接。今天上午联系客服才知道内存拉爆了！","title":"Aliyun ECS","type":"posts"},{"content":"","date":"2025-01-16","externalUrl":null,"permalink":"/tags/ecs/","section":"Tags","summary":"","title":"ECS","type":"tags"},{"content":"","date":"2025-01-15","externalUrl":null,"permalink":"/tags/%E5%9B%BE%E5%BA%8A/","section":"Tags","summary":"","title":"图床","type":"tags"},{"content":"从刚开始接触 Hexo 的时候，就开始使用 图床 来存放博客图片，以提高访问速度，中间折腾过不少解决方案，也遇到了很多坑。本文用来记录一下！\n图床 #\rCloudflare R2 #\r鼎鼎大名的 Cloudflare R2 确在我这里出现了问题：\n使用自定义域名无法访问（需要挂梯子） 移动端蜂窝数据下可以访问，连接 WIFI 也无法访问 包括通过 Cloudflare Pages 托管的 Hexo 也出现了上述的问题，关闭域名解析的代理图标后解决了。\nBitiful #\r后来发现了缤纷云高性能对象存储 + CDN。实名认证后有50 GB 的存储空间以及30 GB 的 HTTPS流量。\n自带的媒体处理功能 CoreIX，可以通过在 Url 末尾（或在 GetObject 接口中）携带图片处理的相关参数的方式使用。\n解决方案： #\r一直使用 Typora 来写作文章，大概流程是：\n压缩 #\r使用的 Piclist 自带的功能，可以实现图片格式转化、压缩、水印等功能：\nPiclist 水印功能只能调取本地图片，切无法实现位置、模糊度等功能\nRename #\r博客文章大多来自手机、网盘、截图或者网络，图片名称鱼龙混杂，作为强迫症患者，图片上传到对象存储前必须做一波重命名。\n刚开始使用的 uTools 的批量重命名插件：\n但是发生了一件离奇的事情，就是这个 AI 重命名随机字符竟然会重复，导致上传到存储对象的同文件夹的图片被覆盖了，幸亏发现的早。\n上传 #\r同压缩，使用 Typora + Piclist 来实现图的自动上传，但是 Piclist 自带的 AWS S3 无法实现在图片 Url 末尾添加图片处理的相关参数，一直在手动实现。\n后来发现了 picgo-plugin-s3 插件，通过 urlSuffix 参数完美的实现了这一点。\n同时发现了 picgo-plugin-squoosh 插件，除了压缩功能外，还支持使用图片 MD5 来重命名，这就很方便了。\n","date":"2025-01-15","externalUrl":null,"permalink":"/posts/code/toss-picture-bed/","section":"文章","summary":"从刚开始接触 Hexo 的时候，就开始使用 \u003ccode\u003e 图床\u003c/code\u003e 来存放博客图片，以提高访问速度，中间折腾过不少解决方案，也遇到了很多坑。本文用来记录一下！","title":"折腾图床的心酸历程","type":"posts"},{"content":"\r出站已经下午5点多了，听说那几家好吃的鱼庄是要排队的，直接打车去！\n果然排队的人很多，最后等了20分钟左右和另外两位排队的在大厅拼桌了。\n58元/斤，三斤起售，两个人是肯定吃不完的。最后剩一半打包了。\n很麻，不辣，味道还不错！\n这是第二天租了个电动单车去吃早饭的对方。店名和我名字一样。\n本地的热米皮、菜豆腐、花生酱确实比西安的好吃。香而不辣，也很便宜。\n吃完饭去了汉江看了红嘴鸥。\n","date":"2025-01-13","externalUrl":null,"permalink":"/posts/daily/travel-hanzhong/","section":"文章","summary":"这是我第一次坐火车。30多年第一次坐火车","title":"去汉中吃鱼","type":"posts"},{"content":"","date":"2025-01-13","externalUrl":null,"permalink":"/tags/%E6%97%A5%E8%AE%B0/","section":"Tags","summary":"","title":"日记","type":"tags"},{"content":"","date":"2025-01-10","externalUrl":null,"permalink":"/tags/blinko/","section":"Tags","summary":"","title":"Blinko","type":"tags"},{"content":"Memos 的 S3 储存太拉跨了，用群友的话就是作者的每次更新都是毁灭性的！进而了解到了 Blinko 。\nBlinko 是一个创新的开源项目，专为想要快速捕捉和组织转瞬即逝的想法的个人而设计。Blinko 允许用户在想法出现的那一刻无缝记下想法，确保不会丢失任何创意火花。\nblinko 是老外写的一个开源笔记项目，具体特点如下：\nAI增强笔记检索 数据存储在本地，不容易丢失 支持Markdown编辑器和纯文档 代码开源可放心使用 Blinko 所有的公开闪念和笔记全部展示在 share 页面，例如：https://b.xwoniu.com/share\n介绍 #\r区别与 memos，blinko 拥有 blinko（闪念）以及 note（笔记）两种模式，可以互相切换。\n目的：专为快速捕获和临时信息而设计\n主要特点：\n自动存档功能 非常适合临时提醒 非常适合短格式内容 使用案例：\n每日任务和提醒 快速的想法和想法 临时信息 不需要长期存放的会议记录 目的：为永久保留知识和详细文档而构建\n主要特点：\n富文本格式 分层组织 永久存储 使用案例：\n项目文档 研究结果 学习资料 重要参考文件 简单总结：\n闪念：快速思考、临时信息、自动存档\n笔记：长篇内容、永久存储、知识库\n部署 #\r创建安装目录 #\rsudo -i mkdir -p /root/data/docker_data/blinko cd /root/data/docker_data/blinko 接着我们来编辑下docker-compose.yml\nvim docker-compose.yml networks: blinko-network: driver: bridge services: blinko-website: image: blinkospace/blinko:latest container_name: blinko-website environment: NODE_ENV: production NEXTAUTH_URL: http://localhost:1111 NEXT_PUBLIC_BASE_URL: https://notes.gugu.ovh #改成自己的域名 NEXTAUTH_SECRET: uNG9%\u0026amp;Nce8z^Yev #自己设置一个密码 DATABASE_URL: postgresql://postgres:password@postgres:5432/postgres #password改成自己的密码，和下方POSTGRES_PASSWORD的一样 depends_on: postgres: condition: service_healthy # Make sure you have enough permissions. volumes: - ./blinko:/app/.blinko restart: always logging: options: max-size: \u0026#34;10m\u0026#34; max-file: \u0026#34;3\u0026#34; ports: - 3000:1111 # 3000可以自己修改成没有用过的端口 healthcheck: test: [\u0026#34;CMD\u0026#34;, \u0026#34;curl\u0026#34;, \u0026#34;-f\u0026#34;, \u0026#34;http://localhost:1111/\u0026#34;] interval: 30s timeout: 10s retries: 5 start_period: 30s networks: - blinko-network postgres: image: postgres:14 container_name: blinko-postgres restart: always ports: - 5432 environment: POSTGRES_DB: postgres POSTGRES_USER: postgres POSTGRES_PASSWORD: password #记得改一个密码 TZ: Asia/Shanghai healthcheck: test: [\u0026#34;CMD\u0026#34;, \u0026#34;pg_isready\u0026#34;, \u0026#34;-U\u0026#34;, \u0026#34;postgres\u0026#34;, \u0026#34;-d\u0026#34;, \u0026#34;postgres\u0026#34;] interval: 5s timeout: 10s retries: 5 networks: - blinko-network NEXTAUTH_URL：指定应用程序的基本 URL，通常是已部署网站的根 URL，用于身份验证回调和重定向，一般保持默认http://localhost:1111即可\nNEXT_PUBLIC_BASE_URL：定义应用程序的公共基础 URL，用作前端和 API 请求的基础路径。一般改成自己的最后访问的域名即可\nNEXTAUTH_SECRET：用于加密会话和身份验证令牌的秘密密钥，确保用户数据安全。自己设置一个密码\nDATABASE_URL：用于连接和访问 blinko 数据库的数据库连接URL\n同样，修改完成之后，可以在英文输入法下，按 i 修改，完成之后，按一下 esc，然后 :wq 保存退出\n查看端口是否被占用 #\r查看端口是否被占用（以 3000 为例）：\nlsof -i:3000 #查看 3000 端口是否被占用，如果被占用，重新自定义一个端口 如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～\n如果出现：\nbash: lsof: command not found 运行：\napt install lsof #安装 lsof 如果端口没有被占用（被占用了就修改一下端口，比如改成 8381，注意 docker 命令行里和防火墙都要改\n启动 blinko #\rcd /root/data/docker_data/blinko docker compose up -d # 注意，老版本用户用 docker-compose up -d 等待拉取好镜像，出现 done 的字样之后，\n理论上我们就可以输入 http://ip:3000 访问了。\n使用教程 #\rAI #\r注册 硅基流动，在 API 秘钥中 API 密钥 启用 Blinko ai， AI 服务商：选择 OpenAI； 人工智能模型：填写 Qwen/Qwen2.5-7B-Instruct 嵌入式模型：填写 BAAI/bge-m3 API Key：为硅基流动 API 密钥； 接口地址：https://api.siliconflow.cn/v1 导入 #\rblinko 支持从 memos 导入数据，这就很方便了。\n从本地导入前请把 存储 改为本地。\n更新 Blinko #\r这个项目后续应该也会有更新，所以提供一个更新的方式：\ncd /root/data/docker_data/blinko docker compose pull docker compose up -d # 请不要使用 docker compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。 docker image prune # prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像 提示：\nWARNING! This will remove all dangling images. Are you sure you want to continue? [y/N] 输入 y 并回车\n卸载 Blinko #\r同样进入安装页面，先停止所有容器：\ncd /root/data/docker_data/blinko docker compose down cd .. rm -rf /root/data/docker_data/blinko # 完全删除 可以卸载的很干净了！\n参阅 #\rBlinko Doc https://github.com/blinko-space/blinko. https://blog.laoda.de/archives/docker-compose-install-blinko ","date":"2025-01-10","externalUrl":null,"permalink":"/posts/code/hello-blinko/","section":"文章","summary":"Memos 的 S3 储存太拉跨了，用群友的话就是作者的每次更新都是毁灭性的！进而了解到了 \u003ca href=\"https://blinko.mintlify.app/\" target=\"_blank\"\u003eBlinko\u003c/a\u003e","title":"Hello Blinko","type":"posts"},{"content":"","date":"2025-01-08","externalUrl":null,"permalink":"/tags/synology/","section":"Tags","summary":"","title":"Synology","type":"tags"},{"content":"记录一些自己折腾群晖 NAS 的过程！\n基础配置 #\r套件源 #\r套件中心 - 设置 - 套件来源 - 新增 ：\nhttps://spk7.imnks.com/ DSM6.x套件源已于 2024.3.15 停止服务！\n启动 SSH 功能 #\r洗白 #\r在某宝购买了黑群晖洗白码，包含了 SN + MAC 码，NAS 关机的情况下，拔出启动U盘，插入电脑！\n打开并编辑 user-config 文件，填入对应的 SN + MAC 码，U盘插入 NAS，开机即可！\nAdvanced Media Extensions #\r先卸载 Advanced Media Extensions ，然后关机（不是重启），几分钟后再开机并重新安装 Advanced Media Extensions 。\n使用 Putty 或者其他 SSH 工具登录 NAS：\nssh root@192.168.1.110 # 连接 NAS sudo -i # 获取临时 root 根据自己的 DSM 版本选择下列命令并执行：\n# DSM7.1 AME版本3.0.1-2004 curl -L http://code.imnks.com/ame3patch/ame71-2004.py | python # DSM7.2 AME版本3.1.0-3005 curl -L http://code.imnks.com/ame3patch/ame72-3005.py | python ","date":"2025-01-08","externalUrl":null,"permalink":"/posts/code/synology-configuration/","section":"文章","summary":"记录一些自己折腾群晖 NAS 的过程！","title":"黑群晖配置","type":"posts"},{"content":"","date":"2024-06-01","externalUrl":null,"permalink":"/tags/visual-studio-cod/","section":"Tags","summary":"","title":"Visual Studio Cod","type":"tags"},{"content":"作为目前主力开发以及编辑工具，VSCode每天都在使用，下面列举本人为了方便开发而使用安装的一些插件以及美化。\n插件 #\rGit Emoji Commit 中文版 #\r在现代软件开发流程中，Git 已成为版本控制的主流工具，而良好的 Git 提交消息规范不仅能提升代码库的可读性，还能加强团队间的协作效率。Git Git Emoji Commit 中文版是一个专为中文开发者设计的 Git 提交信息增强工具，它提供了一套清晰易懂、富有表现力的 emoji 算法，以助于提升你的 Git 提交体验。\nBUG解决\n该软件目前有个BUG，选中 emoji 后输入框无法显示。\n解决方案（Windows)：\n打开文件夹：C:\\Users\\用户名\\.vscode\\extensions，进入带插件名以及版本号的文件夹； 打开并编辑./out/extension.js文件第23行左右； 替换下面代码保存并重启 VSCode 即可： 查找：\nreturn repository.rootUri.path === uri._rootUri.path; 替换：\nreturn repository.rootUri.path === uri.rootUri.path; CodeSnap #\r# DSM7.1 AME版本3.0.1-2004curl -L http://code.imnks.com/ame3patch/ame71-2004.py | python# DSM7.2 AME版本3.1.0-3005curl -L http://code.imnks.com/ame3patch/ame72-3005.py | pythonbash\nGit Graph #\r查看存储库的Git图，并从图中轻松执行Git操作。可配置为您想要的样子！\nOne Dark Pro #\r一个好看的主题\n","date":"2024-06-01","externalUrl":null,"permalink":"/posts/code/visaul-studio-code/","section":"文章","summary":"作为目前主力开发以及编辑工具，VSCode每天都在使用，下面列举本人为了方便开发而使用安装的一些插件以及美化。","title":"Visual Studio Code 配置","type":"posts"},{"content":"","date":"2024-05-12","externalUrl":null,"permalink":"/tags/memos/","section":"Tags","summary":"","title":"Memos","type":"tags"},{"content":"Memos 升级到新版后，出现了各种不适应。比如：API 调用，S3储存无法自定义域名等等，所以打算降级到 v0.18.2 版本。\n备份 #\r我使用的 1Panel 面板来搭建的 Memos，它本身自带一键备份和恢复功能，所以比较方便。\n降级 #\r在 1Panel 后台安装好最新版的 Memos 应用后，我们选择降级操作：\n更改版本号：\n搞定，舒服！\n","date":"2024-05-12","externalUrl":null,"permalink":"/posts/code/memos-downgrade/","section":"文章","summary":"\u003cp\u003eMemos 升级到新版后，出现了各种不适应。比如：API 调用，S3储存无法自定义域名等等，所以打算降级到 \u003ccode\u003ev0.18.2\u003c/code\u003e 版本。\u003c/p\u003e\n\u003cp\u003e\r\n  \u003cfigure\u003e\r\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://s3.xwoniu.com/blog/posts/34c90356445fe3041cc50758d27b381f.webp?mark=blog/Xwoniu-LOGO.png\u0026amp;mark-pos=0.96,0.96\u0026amp;mark-pct=0.2\u0026amp;mark-alpha=0.5\" alt=\"Memos V0.23.0\" /\u003e\r\n    \r\n  \u003c/figure\u003e\r\n\u003c/p\u003e","title":"Memos 版本降级","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"My NeoDB book, film and music bookmark records. Life is like a movie without a script. Watching a movie is like having a dream, like taking a long trip, like experiencing someone else\u0026rsquo;s life. Reading won\u0026rsquo;t make you smart, but reading will let you know yourself stupid. Those truths that our teachers and elders didn\u0026rsquo;t teach us, from books and movies, we quietly learn.\n","externalUrl":null,"permalink":"/media/_index.en/","section":"书影音","summary":"\u003cp\u003eMy \u003ca href=\"https://neodb.social/users/eallion/\" target=\"_blank\"\u003eNeoDB\u003c/a\u003e book, film and music bookmark records.\nLife is like a movie without a script. Watching a movie is like having a dream, like taking a long trip, like experiencing someone else\u0026rsquo;s life. Reading won\u0026rsquo;t make you smart, but reading will let you know yourself stupid. Those truths that our teachers and elders didn\u0026rsquo;t teach us, from books and movies, we quietly learn.\u003c/p\u003e","title":"Watched","type":"sample"},{"content":"好物分享（测试版）。自己体验过的好物推荐。记录一下剁手过程，记录一下使用体验，避免被大数据驯化。如果需要优惠券可以看看我的导购网站，直接搜索优惠券（失败的 AFFman，基本上没什么流量）：👉 www.kubaicai.com 。\n","externalUrl":null,"permalink":"/goods/","section":"好物 beta","summary":"\u003cp\u003e好物分享（测试版）。自己体验过的好物推荐。记录一下剁手过程，记录一下使用体验，避免被大数据驯化。如果需要优惠券可以看看我的导购网站，直接搜索优惠券（失败的 AFFman，基本上没什么流量）：👉 \u003ca href=\"https://www.kubaicai.com/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"\u003e\u003ca href=\"https://www.kubaicai.com\" target=\"_blank\"\u003ewww.kubaicai.com\u003c/a\u003e \r\n\r\n  \u003cspan class=\"relative inline-block align-text-bottom icon\"\u003e\r\n    \u003csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"1rem\" height=\"1rem\" viewBox=\"0 0 32 32\"\u003e\u003cpath fill=\"currentColor\" d=\"M18 5v2h5.563L11.28 19.281l1.438 1.438L25 8.437V14h2V5zM5 9v18h18V14l-2 2v9H7V11h9l2-2z\"/\u003e\u003c/svg\u003e\r\n  \u003c/span\u003e\r\n\r\n\u003c/a\u003e 。\u003c/p\u003e","title":"好物 beta","type":"sample"},{"content":"我的 NeoDB 书影音标记记录。 人生就像一场没有剧本的电影。看一场电影，就像做了一场梦，像一次远行，像体验了别人的一生。读书不会变聪明，但读书会让你知道自己蠢。那些师长没有教会我们的道理，从书影音中，我们悄悄地就学会了。\n","externalUrl":null,"permalink":"/media/","section":"书影音","summary":"\u003cp\u003e我的 \u003ca href=\"https://neodb.social/users/eallion/\" target=\"_blank\"\u003eNeoDB\u003c/a\u003e 书影音标记记录。\n人生就像一场没有剧本的电影。看一场电影，就像做了一场梦，像一次远行，像体验了别人的一生。读书不会变聪明，但读书会让你知道自己蠢。那些师长没有教会我们的道理，从书影音中，我们悄悄地就学会了。\u003c/p\u003e","title":"书影音","type":"sample"},{"content":"从 20 年前建站伊始，我的友情链接页面就不是以 SEO 或其他什么乱七八糟的目的而存在。最早的友情链接页面类似于导航网站，后来专门部署了个人导航网站 s.eallion.com ，慢慢的友情链接页面就变成了收集的作用，放一些我喜欢的内容，再后来，不少内容消失不见了。友情链接换了一批又一批，但是因为朋友们有交换友链的需求，这个页面就一直存在着。 申请友链原则上没有什么要求，请发邮件或提交 PR 。\n🔗 我的友链信息：\n标题：大大的小蜗牛\nURL：https://www.eallion.com\nAvatar：https://www.eallion.com/eallion.png\nGravatar：https://gravatar.com/avatar/171e4c30959e8c077a6c58b958624b31\n描述：机会总是垂青于有准备的人\nTitle：Charles Chin's blog\nDescription：Chance favors the prepared mind\n","externalUrl":null,"permalink":"/links/","section":"友情链接","summary":"\u003cp\u003e从 20 年前建站伊始，我的友情链接页面就不是以 SEO 或其他什么乱七八糟的目的而存在。最早的友情链接页面类似于导航网站，后来专门部署了个人导航网站 \u003ca href=\"https://s.eallion.com\" target=\"_blank\"\u003es.eallion.com\u003c/a\u003e ，慢慢的友情链接页面就变成了收集的作用，放一些我喜欢的内容，再后来，不少内容消失不见了。友情链接换了一批又一批，但是因为朋友们有交换友链的需求，这个页面就一直存在着。\n申请友链原则上没有什么要求，请发邮件或提交 \u003ca href=\"https://github.com/eallion/eallion.com/blob/main/data/friends/links.json\" target=\"_blank\"\u003ePR\u003c/a\u003e 。\u003c/p\u003e","title":"友情链接","type":"sample"}]